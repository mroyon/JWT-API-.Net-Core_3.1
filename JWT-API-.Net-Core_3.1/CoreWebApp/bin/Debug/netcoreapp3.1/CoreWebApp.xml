<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreWebApp</name>
    </assembly>
    <members>
        <member name="M:CoreWebApp.Controllers.AccountController.#ctor(CoreWebApp.CustomIdentityManagers.ApplicationUserManager{BDO.DataAccessObjects.SecurityModule.owin_userEntity},CoreWebApp.CustomIdentityManagers.ApplicationSignInManager{BDO.DataAccessObjects.SecurityModule.owin_userEntity},CoreWebApp.IntraServices.IEmailSender,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Localization.IStringLocalizerFactory,Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider)">
            <summary>
            
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
            <param name="emailSender"></param>
            <param name="loggerFactory"></param>
            <param name="factory"></param>
            <param name="schemeProvider"></param>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.Login(System.String)">
            <summary>
            
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.Login(BDO.DataAccessObjects.SecurityModule.owin_userEntity)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.Logout(System.String)">
            <summary>
            
            </summary>
            <param name="logoutId"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.Logout(BDO.DataAccessObjects.SecurityModule.owin_userEntity)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.ForgotPassword">
            <summary>
            ForgotPassword GET
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.ForgotPassword(BDO.DataAccessObjects.SecurityModule.owin_userEntity)">
            <summary>
            ForgotPassword
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.ForgotPasswordConfirmation">
            <summary>
            ForgotPasswordConfirmation - GET
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.ResetPassword(System.String)">
            <summary>
            ResetPassword = GET
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.ResetPassword(BDO.DataAccessObjects.SecurityModule.owin_userEntity)">
            <summary>
            ResetPassword = POST
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.AccountController.ResetPasswordConfirmation">
            <summary>
            ResetPasswordConfirmation = GET
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.HomeController.#ctor(CoreWebApp.CustomIdentityManagers.ApplicationUserManager{BDO.DataAccessObjects.SecurityModule.owin_userEntity},CoreWebApp.CustomIdentityManagers.ApplicationSignInManager{BDO.DataAccessObjects.SecurityModule.owin_userEntity},Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Localization.IStringLocalizerFactory)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoreWebApp.Controllers.HomeController.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.HomeController.Privacy">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.HomeController.Error(System.String)">
            <summary>
            Shows the error page
            </summary>
        </member>
        <member name="M:CoreWebApp.Controllers.SetLanguageController.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Controllers.SetLanguageController.SetLanguage(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="culture"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="T:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1">
            
        </member>
        <member name="P:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1.Logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="P:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1.UserManager">
            <summary>
            UserManager
            </summary>
        </member>
        <member name="P:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1.ClaimsFactory">
            <summary>
            ClaimsFactory
            </summary>
        </member>
        <member name="P:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1.Context">
            <summary>
            Context
            </summary>
        </member>
        <member name="M:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1.#ctor(CoreWebApp.CustomIdentityManagers.ApplicationUserManager{BDO.DataAccessObjects.SecurityModule.owin_userEntity},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{BDO.DataAccessObjects.SecurityModule.owin_userEntity},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.SignInManager{BDO.DataAccessObjects.SecurityModule.owin_userEntity}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Identity.IUserConfirmation{BDO.DataAccessObjects.SecurityModule.owin_userEntity})">
            <summary>
            ApplicationSignInManager
            </summary>
            <param name="userManager"></param>
            <param name="contextAccessor"></param>
            <param name="claimsFactory"></param>
            <param name="optionsAccessor"></param>
            <param name="logger"></param>
            <param name="schemes"></param>
            <param name="confirmation"></param>
        </member>
        <member name="M:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            PasswordSignInAsync
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="isPersistent"></param>
            <param name="lockoutOnFailure"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.CustomIdentityManagers.ApplicationSignInManager`1.PasswordSignInAsync(BDO.DataAccessObjects.SecurityModule.owin_userEntity,System.String,System.Boolean,System.Boolean)">
            <summary>
            PasswordSignInAsync
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <param name="isPersistent"></param>
            <param name="lockoutOnFailure"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.CustomIdentityManagers.ApplicationUserManager`1.loginowin_userlogintrail(BDO.Base.SecurityCapsule)">
            <summary>
            addowin_userlogintrail
            </summary>
            <param name="securityCapsule"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.CustomIdentityManagers.ApplicationUserManager`1.logoutowin_userlogintrail(System.Security.Claims.ClaimsIdentity)">
            <summary>
            updateowin_userlogintrail
            </summary>
            <param name="claimsIdentity"></param>
            <param name="resLoginSeriale"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.CustomIdentityManagers.ApplicationUserManager`1.UpdateUserPasswordResetInfo(BDO.DataAccessObjects.SecurityModule.owin_userEntity,System.String)">
            <summary>
            UpdateUserPasswordResetInfo
            </summary>
            <param name="user"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.DefaultError">
            <summary>
            Returns the default <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/>.
            </summary>
            <returns>The default <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/>.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.ConcurrencyFailure">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a concurrency failure.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a concurrency failure.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.PasswordMismatch">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password mismatch.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password mismatch.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.InvalidToken">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating an invalid token.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating an invalid token.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.RecoveryCodeRedemptionFailed">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a recovery code was not redeemed.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a recovery code was not redeemed.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.LoginAlreadyAssociated">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating an external login is already associated with an account.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating an external login is already associated with an account.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.InvalidUserName(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified user <paramref name="userName"/> is invalid.
            </summary>
            <param name="userName">The user name that is invalid.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified user <paramref name="userName"/> is invalid.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.InvalidEmail(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="email"/> is invalid.
            </summary>
            <param name="email">The email that is invalid.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="email"/> is invalid.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.DuplicateUserName(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="userName"/> already exists.
            </summary>
            <param name="userName">The user name that already exists.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="userName"/> already exists.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.DuplicateEmail(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="email"/> is already associated with an account.
            </summary>
            <param name="email">The email that is already associated with an account.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="email"/> is already associated with an account.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.InvalidRoleName(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="role"/> name is invalid.
            </summary>
            <param name="role">The invalid role.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specific role <paramref name="role"/> name is invalid.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.DuplicateRoleName(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specified <paramref name="role"/> name already exists.
            </summary>
            <param name="role">The duplicate role.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating the specific role <paramref name="role"/> name already exists.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.UserAlreadyHasPassword">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a user already has a password.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a user already has a password.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.UserLockoutNotEnabled">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating user lockout is not enabled.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating user lockout is not enabled.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.UserAlreadyInRole(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a user is already in the specified <paramref name="role"/>.
            </summary>
            <param name="role">The duplicate role.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a user is already in the specified <paramref name="role"/>.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.UserNotInRole(System.String)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a user is not in the specified <paramref name="role"/>.
            </summary>
            <param name="role">The duplicate role.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a user is not in the specified <paramref name="role"/>.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.PasswordTooShort(System.Int32)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password of the specified <paramref name="length"/> does not meet the minimum length requirements.
            </summary>
            <param name="length">The length that is not long enough.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password of the specified <paramref name="length"/> does not meet the minimum length requirements.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.PasswordRequiresUniqueChars(System.Int32)">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password does not meet the minimum number <paramref name="uniqueChars"/> of unique chars.
            </summary>
            <param name="uniqueChars">The number of different chars that must be used.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password does not meet the minimum number <paramref name="uniqueChars"/> of unique chars.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.PasswordRequiresNonAlphanumeric">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain a non-alphanumeric character, which is required by the password policy.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain a non-alphanumeric character.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.PasswordRequiresDigit">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain a numeric character, which is required by the password policy.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain a numeric character.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.PasswordRequiresLower">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain a lower case letter, which is required by the password policy.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain a lower case letter.</returns>
        </member>
        <member name="M:CoreWebApp.Descripter.CusIdentityErrorDescriber.PasswordRequiresUpper">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain an upper case letter, which is required by the password policy.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Identity.IdentityError"/> indicating a password entered does not contain an upper case letter.</returns>
        </member>
        <member name="M:CoreWebApp.IntraServices.AdditionalUserClaimsPrincipalFactory.#ctor(CoreWebApp.CustomIdentityManagers.ApplicationUserManager{BDO.DataAccessObjects.SecurityModule.owin_userEntity},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            AdditionalUserClaimsPrincipalFactory
            </summary>
            <param name="userManager"></param>
            <param name="roleManager"></param>
            <param name="optionsAccessor"></param>
            <param name="contextAccessor"></param>
        </member>
        <member name="M:CoreWebApp.IntraServices.AdditionalUserClaimsPrincipalFactory.CreateAsync(BDO.DataAccessObjects.SecurityModule.owin_userEntity)">
            <summary>
            CreateAsync
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:CoreWebApp.IntraServices.EmailSender">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoreWebApp.IntraServices.EmailSender.#ctor(Microsoft.Extensions.Options.IOptions{BDO.DataAccessObjects.CommonEntities.EmailSettings})">
            <summary>
            
            </summary>
            <param name="optionsEmailSettings"></param>
        </member>
        <member name="M:CoreWebApp.IntraServices.EmailSender.SendEmailAsync(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="email"></param>
            <param name="subject"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.IntraServices.EmailSender.Execute(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="email"></param>
            <param name="subject"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebApp.Providers.LocalizationQueryProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
    </members>
</doc>
